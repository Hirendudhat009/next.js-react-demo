{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\iRoid\\\\Desktop\\\\learning react.js\\\\next.js\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport { ObjectID } from \"mongodb\";\nimport MeetupDetails from '../../components/meetups/MeetupDetail';\n\nfunction meetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\nexport var __N_SSG = true;\nexport default meetupDetails;","map":{"version":3,"sources":["C:/Users/iRoid/Desktop/learning react.js/next.js/pages/[meetupId]/index.js"],"names":["Fragment","ObjectID","MeetupDetails","meetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBAAO,QAAC,QAAD;AAAA,2BACH,QAAC,aAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH;;;AAuDD,eAAeN,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport { MongoClient, ObjectID } from \"mongodb\";\r\nimport MeetupDetails from '../../components/meetups/MeetupDetail'\r\n\r\nfunction meetupDetails(props) {\r\n    return <Fragment>\r\n        <MeetupDetails\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description}\r\n        />\r\n    </Fragment>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = await db.collection('meetups')\r\n\r\n    const result = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    return {\r\n        fallback: true,\r\n        paths: result.map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString() }\r\n        }))\r\n        // paths: [\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm1'\r\n        //         }\r\n        //     },\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm2'\r\n        //         }\r\n        //     }\r\n        // ]\r\n    }\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n\r\n    const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = await db.collection('meetups')\r\n\r\n    const result = await meetupsCollection.findOne({ _id: meetupId })\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: result._id,\r\n                image: result.image,\r\n                title: result.title,\r\n                address: result.address,\r\n                description: result.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default meetupDetails;"]},"metadata":{},"sourceType":"module"}