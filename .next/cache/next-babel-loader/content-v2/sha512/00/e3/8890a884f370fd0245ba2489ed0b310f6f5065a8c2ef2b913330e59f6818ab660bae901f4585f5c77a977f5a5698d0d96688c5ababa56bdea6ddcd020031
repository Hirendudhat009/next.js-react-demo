{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\iRoid\\\\Desktop\\\\learning react.js\\\\next.js\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetails from '../../components/meetups/MeetupDetail';\n\nfunction meetupDetails() {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: \"https://fileinfo.com/extension/jpg\",\n      alt: \"a first meetup\",\n      title: \"A First Meet-up\",\n      address: \"Surat\",\n      description: \"description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const {\n    title,\n    image,\n    address,\n    description\n  } = data;\n  const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false');\n  const db = client.db();\n  const meetupsCollection = await db.collection('meetups');\n  const result = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: true,\n    paths: result.map() // paths: [\n    //     {\n    //         params: {\n    //             meetupId: 'm1'\n    //         }\n    //     },\n    //     {\n    //         params: {\n    //             meetupId: 'm2'\n    //         }\n    //     }\n    // ]\n\n  };\n}\nexport function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://fileinfo.com/extension/jpg\",\n        alt: \"a first meetup\",\n        title: \"A First Meet-up\",\n        address: 'Surat',\n        description: 'description'\n      }\n    }\n  };\n}\nexport default meetupDetails;","map":{"version":3,"sources":["C:/Users/iRoid/Desktop/learning react.js/next.js/pages/[meetupId]/index.js"],"names":["Fragment","MongoClient","MeetupDetails","meetupDetails","getStaticPaths","title","image","address","description","data","client","connect","db","meetupsCollection","collection","result","find","_id","toArray","fallback","paths","map","getStaticProps","context","meetupId","params","props","meetupData","id","alt"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBAAO,QAAC,QAAD;AAAA,2BACH,QAAC,aAAD;AACI,MAAA,KAAK,EAAC,oCADV;AAEI,MAAA,GAAG,EAAC,gBAFR;AAGI,MAAA,KAAK,EAAC,iBAHV;AAII,MAAA,OAAO,EAAC,OAJZ;AAKI,MAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AASH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAyCC,IAA/C;AACA,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,uFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhC;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAArB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,IADP;AAEHC,IAAAA,KAAK,EAAEL,MAAM,CAACM,GAAP,EAFJ,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdG,GAAP;AAgBH;AAGD,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACpC,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AACA,SAAO;AACHE,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,EAAE,EAAEJ,QADI;AAERlB,QAAAA,KAAK,EAAE,oCAFC;AAGRuB,QAAAA,GAAG,EAAE,gBAHG;AAIRxB,QAAAA,KAAK,EAAE,iBAJC;AAKRE,QAAAA,OAAO,EAAE,OALD;AAMRC,QAAAA,WAAW,EAAE;AANL;AADT;AADJ,GAAP;AAYH;AAED,eAAeL,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupDetails from '../../components/meetups/MeetupDetail'\r\n\r\nfunction meetupDetails() {\r\n    return <Fragment>\r\n        <MeetupDetails\r\n            image=\"https://fileinfo.com/extension/jpg\"\r\n            alt=\"a first meetup\"\r\n            title=\"A First Meet-up\"\r\n            address='Surat'\r\n            description='description'\r\n        />\r\n    </Fragment>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const { title, image, address, description } = data\r\n    const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = await db.collection('meetups')\r\n\r\n    const result = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    return {\r\n        fallback: true,\r\n        paths: result.map()\r\n        // paths: [\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm1'\r\n        //         }\r\n        //     },\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm2'\r\n        //         }\r\n        //     }\r\n        // ]\r\n    }\r\n}\r\n\r\n\r\nexport function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetupId,\r\n                image: \"https://fileinfo.com/extension/jpg\",\r\n                alt: \"a first meetup\",\r\n                title: \"A First Meet-up\",\r\n                address: 'Surat',\r\n                description: 'description'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default meetupDetails;"]},"metadata":{},"sourceType":"module"}