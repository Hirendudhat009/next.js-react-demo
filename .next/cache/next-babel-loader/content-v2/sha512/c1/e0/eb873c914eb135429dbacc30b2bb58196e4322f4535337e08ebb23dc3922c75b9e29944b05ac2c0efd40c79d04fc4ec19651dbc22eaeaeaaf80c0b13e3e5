{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\iRoid\\\\Desktop\\\\learning react.js\\\\next.js\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetails from '../../components/meetups/MeetupDetail';\n\nfunction meetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"meetup data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false');\n  const db = client.db();\n  const meetupsCollection = await db.collection('meetups');\n  const result = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: true,\n    paths: result.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths: [\n    //     {\n    //         params: {\n    //             meetupId: 'm1'\n    //         }\n    //     },\n    //     {\n    //         params: {\n    //             meetupId: 'm2'\n    //         }\n    //     }\n    // ]\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false');\n  const db = client.db();\n  const meetupsCollection = await db.collection('meetups');\n  const result = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: result._id.toString(),\n        image: result.image,\n        title: result.title,\n        address: result.address,\n        description: result.description\n      }\n    }\n  };\n}\nexport default meetupDetails;","map":{"version":3,"sources":["C:/Users/iRoid/Desktop/learning react.js/next.js/pages/[meetupId]/index.js"],"names":["Fragment","Head","MongoClient","ObjectId","MeetupDetails","meetupDetails","props","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","result","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,aAAD;AACI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAD5B;AAEI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,uFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhC;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAArB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,IADP;AAEHC,IAAAA,KAAK,EAAEL,MAAM,CAACM,GAAP,CAAYC,MAAD,KAAa;AAC3BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADmB,KAAb,CAAX,CAFJ,CAKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBG,GAAP;AAkBH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,uFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhC;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACe,OAAlB,CAA0B;AAAEX,IAAAA,GAAG,EAAEjB,QAAQ,CAACwB,QAAD;AAAf,GAA1B,CAArB;AAEA,SAAO;AACHrB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRyB,QAAAA,EAAE,EAAEd,MAAM,CAACE,GAAP,CAAWQ,QAAX,EADI;AAERnB,QAAAA,KAAK,EAAES,MAAM,CAACT,KAFN;AAGRD,QAAAA,KAAK,EAAEU,MAAM,CAACV,KAHN;AAIRE,QAAAA,OAAO,EAAEQ,MAAM,CAACR,OAJR;AAKRC,QAAAA,WAAW,EAAEO,MAAM,CAACP;AALZ;AADT;AADJ,GAAP;AAWH;AAED,eAAeN,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetails from '../../components/meetups/MeetupDetail'\r\n\r\nfunction meetupDetails(props) {\r\n    return <Fragment>\r\n        <Head>\r\n            <title>{props.meetupData.title}</title>\r\n            <meta name=\"description\" content=\"meetup data\" />\r\n        </Head>\r\n        <MeetupDetails\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description}\r\n        />\r\n    </Fragment>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = await db.collection('meetups')\r\n\r\n    const result = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    return {\r\n        fallback: true,\r\n        paths: result.map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString() }\r\n        }))\r\n        // paths: [\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm1'\r\n        //         }\r\n        //     },\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm2'\r\n        //         }\r\n        //     }\r\n        // ]\r\n    }\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n\r\n    const client = await MongoClient.connect('mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass&ssl=false')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = await db.collection('meetups')\r\n\r\n    const result = await meetupsCollection.findOne({ _id: ObjectId(meetupId) })\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: result._id.toString(),\r\n                image: result.image,\r\n                title: result.title,\r\n                address: result.address,\r\n                description: result.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default meetupDetails;"]},"metadata":{},"sourceType":"module"}